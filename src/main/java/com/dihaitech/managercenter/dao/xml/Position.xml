<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dihaitech.managercenter.dao.IPositionDAO">
	
	<cache flushInterval="600000" eviction="LRU" type="org.mybatis.caches.oscache.OSCache"/>
	
	<sql id="positionLikeWhere">
		<where>
            <if test ="id != null and id > -1">
				and `ID` = #{id}
			</if>
	        <if test ="name != null and name != ''">
			    and `NAME` like '%${name}%'
		    </if>
	        <if test ="code != null and code != ''">
			    and `CODE` like '%${code}%'
		    </if>
	        <if test ="creator != null and creator != ''">
			    and `CREATOR` like '%${creator}%'
		    </if>
	        <if test ="updator != null and updator != ''">
			    and `UPDATOR` like '%${updator}%'
		    </if>
		</where>
	</sql>
	
	<sql id="positionPage">
		<if test="null != start">
		  limit #{start},#{pageSize}
		</if>
	</sql>
	
	<sql id="positionField">
		`ID`, `NAME`, `CODE`, `CREATOR`, `CREATETIME`, `UPDATOR`, `UPDATETIME`
	</sql>
	
	<resultMap id="positionMap" type="position">
	    	<result property="id" column="ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
	    	<result property="name" column="NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
	    	<result property="code" column="CODE" javaType="java.lang.String" jdbcType="VARCHAR" />
	    	<result property="creator" column="CREATOR" javaType="java.lang.String" jdbcType="VARCHAR" />
	    	<result property="createtime" column="CREATETIME" javaType="java.util.Date" jdbcType="TIMESTAMP" />
	    	<result property="updator" column="UPDATOR" javaType="java.lang.String" jdbcType="VARCHAR" />
	    	<result property="updatetime" column="UPDATETIME" javaType="java.util.Date" jdbcType="TIMESTAMP" />
	</resultMap>
	
	<insert id="addSavePosition" parameterType="position">
		insert into `position` (
           `NAME`, 
           `CODE`, 
           `CREATOR`, 
           `CREATETIME`, 
           `UPDATOR`, 
           `UPDATETIME`
		) values 
		(
            #{name}, 
            #{code}, 
            #{creator}, 
            #{createtime}, 
            #{updator}, 
            #{updatetime}
		)
		<selectKey keyProperty="id"  resultType="java.lang.Integer">
			select last_insert_id() as id from `position` limit 1
		</selectKey>
	</insert>
	
	<delete id="deleteByIds" parameterType="String">
		delete from `position` ${_parameter}
	</delete>
	
	<update id="editSavePosition" parameterType="position">
		update `position` set 
              `NAME` = #{name}, 
              `CODE` = #{code}, 
              `UPDATOR` = #{updator}, 
              `UPDATETIME` = #{updatetime}
        	where ID = #{id}
	</update>
	
	<select id="selectPositionById" parameterType="position" resultMap="positionMap"  >
		SELECT * FROM `position` where ID = #{id}
	</select>
	
	<select id="getPositionCount" parameterType="position" resultType="Long" >
		select count(*) from `position`
		<include refid="positionLikeWhere" />
	</select>
	
	<select id="selectAll" parameterType="position" resultMap="positionMap" useCache="false">
		select * from `position`
	</select>
	
	<select id="selectPositionLike" parameterType="position" resultMap="positionMap" >
		SELECT <include refid="positionField" /> FROM `position`
	        <include refid="positionLikeWhere" />
			order by ID desc
	        <include refid="positionPage" /> 
	</select>
	
	<select id="selectPositionByIds" parameterType="position" resultMap="positionMap" >
		SELECT <include refid="positionField" /> FROM `position`
	        where id in(${idStr})
			order by ID
	</select>
</mapper>